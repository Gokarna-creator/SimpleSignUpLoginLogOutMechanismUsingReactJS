{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Every_Programming/projects/facebook/src/js/LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoggedIn() {\n  _s();\n\n  const {\n    validz,\n    search\n  } = useLocation(); //pass prop using link from navbar.js, access by using 'validz'\n\n  const getCredentials = () => JSON.parse(localStorage.getItem('credentials') || \"[]\");\n\n  const getDetails = () => JSON.parse(localStorage.getItem('details') || \"[]\");\n\n  const getInput = () => localStorage.getItem('userinput');\n\n  const isValid = () => localStorage.getItem('valid');\n\n  const [valid, setvalid] = useState(isValid());\n  const [id, setid] = useState(localStorage.getItem('id'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (() => {\n      if (valid) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login is successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login Failed ! Please check your credentials and try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this);\n      }\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoggedIn, \"q4MQ458f3VJylSEypEX9ejsHVls=\", false, function () {\n  return [useLocation];\n});\n\n_c = LoggedIn;\nexport default LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["/home/gokarna/Every_Programming/projects/facebook/src/js/LoggedIn.js"],"names":["React","useState","useLocation","useParams","Link","LoggedIn","validz","search","getCredentials","JSON","parse","localStorage","getItem","getDetails","getInput","isValid","valid","setvalid","id","setid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBL,WAAW,EAApC,CAFgB,CAEwB;;AAExC,QAAMM,cAAc,GAAG,MAAKC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,IAAlD,CAA5B;;AACA,QAAMC,UAAU,GAAG,MAAMJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,IAA9C,CAAzB;;AACA,QAAME,QAAQ,GAAG,MAAMH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAvB;;AACA,QAAMG,OAAO,GAAG,MAAMJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtB;;AAEA,QAAK,CAACI,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACc,OAAO,EAAR,CAAjC;AACA,QAAK,CAACG,EAAD,EAAKC,KAAL,IAAclB,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAA3B;AAEA,sBACI;AAAA,cAEQ,CACI,MAAI;AACA,UAAII,KAAJ,EAAU;AACN,4BACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD,MASI;AACA,4BACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AACJ,KAlBL;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAtCQX,Q;UAEoBH,W;;;KAFpBG,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useLocation, useParams } from 'react-router';\nimport {Link} from 'react-router-dom'\n\nfunction LoggedIn (){\n\n    const {validz, search} = useLocation(); //pass prop using link from navbar.js, access by using 'validz'\n\n    const getCredentials = ()=> JSON.parse(localStorage.getItem('credentials') || \"[]\");\n    const getDetails = () => JSON.parse(localStorage.getItem('details') || \"[]\")\n    const getInput = () => localStorage.getItem('userinput')\n    const isValid = () => localStorage.getItem('valid')\n\n    const[valid, setvalid] = useState(isValid())\n    const[id, setid] = useState(localStorage.getItem('id'))\n\n    return(\n        <div>\n            {\n                (\n                    ()=>{\n                        if (valid){\n                            return(\n                                <div>\n                                    <h1>\n                                        Login is successful\n                                    </h1>\n                                </div>\n                            )\n                        }\n                        else{\n                            return(\n                                <div>\n                                    <h1>Login Failed ! Please check your credentials and try again</h1>\n                                </div>\n                            )\n                        }\n                    }\n                )()\n            }\n        </div>\n    )\n}\n\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}